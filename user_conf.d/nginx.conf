map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

upstream accountstaging {
    server jupyterlab:8888;
}

server {
    set_real_ip_from 192.168.64.41;
    real_ip_header proxy_protocol;

    proxy_set_header X-Real-IP       192.168.64.41;
    proxy_set_header X-Forwarded-For 192.168.64.41;

    listen 80;

    server_name jupyter.paczos.org www.jupyter.paczos.org;
    # Prevent nginx HTTP Server Detection
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Enforce HTTPS
    #return 301 https://$server_name$request_uri;
    if ($scheme = "http") {
        return 301 https://$host$request_uri;
    }
}

server {
    set_real_ip_from 192.168.64.41;
    real_ip_header proxy_protocol;

    proxy_set_header X-Real-IP       192.168.64.41;
    proxy_set_header X-Forwarded-For 192.168.64.41;
    listen 443 default_server proxy_protocol http2 ssl; #comment SSL to disbale SSL;

    server_name jupyter.paczos.org www.jupyter.paczos.org;

    ssl_certificate /etc/nginx/ssl/live/dysk.paczos.org/fullchain.pem; #comment this to disbale SSL;
    ssl_certificate_key /etc/nginx/ssl/live/dysk.paczos.org/privkey.pem;  #comment this to disbale SSL;

    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m; # about 40000 sessions
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Managing literal requests to the JupyterHub frontend
    location / {
        proxy_pass http://jupyterlab:8888;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # websocket headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header X-Scheme $scheme;

        proxy_buffering off;
    }

    # Managing requests to verify letsencrypt host
    location ~ /.well-known {
        allow all;
    }

    # Prevent nginx HTTP Server Detection
    server_tokens off;
}
